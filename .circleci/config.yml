version: 2.1

aliases:
  - &working_directory ~/merchant-center-application-kit

  - &restore_yarn_cache
    name: 'Restoring yarn cache'
    keys:
      - v1-yarn-cache-{{ checksum "yarn.lock" }}
      - v1-yarn-cache

  - &save_yarn_cache
    name: 'Saving yarn cache'
    key: v1-yarn-cache-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn
      - node_modules

executors:
  node_10:
    docker:
      - image: circleci/node:10.15
    working_directory: *working_directory
  cypress:
    working_directory: *working_directory
    docker:
      - image: 'cypress/base:10'
        environment:
          TERM: xterm

orbs:
  compare-url: iynere/compare-url@0.4.10

commands:
  install_dependencies:
    description: 'Installing dependencies'
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache
      - run: yarn install --pure-lockfile
      - save_cache: *save_yarn_cache
  build_artifacts:
    description: 'Building artifacts'
    steps:
      - run: yarn build
  save_workspace:
    steps:
      - persist_to_workspace:
          root: *working_directory
          paths:
            - packages/**/dist
            - playground/dist
            - visual-testing-app/dist
            - application-templates/**/dist
  restore_workspace:
    steps:
      - attach_workspace:
          at: *working_directory
  lint:
    description: 'Running linters'
    steps:
      - run: yarn run jest --projects jest.eslint.config.js jest.stylelint.config.js --maxWorkers=3 --reporters jest-silent-reporter
  unit_test:
    description: 'Running tests'
    steps:
      - run: yarn run jest --projects jest.test.config.js --maxWorkers=3 --reporters jest-silent-reporter
  vrt_test:
    description: 'Running Visual Regression Tests'
    steps:
      - run:
          name: Updating (apt-get update)
          working_directory: *working_directory
          command: sudo apt-get update -y
      - run:
          name: Upgrading (apt-get upgrade)
          working_directory: *working_directory
          command: sudo apt-get upgrade -y
      - run:
          name: Installing Chrome headless dependencies
          working_directory: *working_directory
          command: |
            sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
            libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
            ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget --fix-missing
      - compare-url/reconstruct:
          project-path: *working_directory
      - run:
          name: Running Percy
          command: yarn run-if:percy
  build_packages:
    steps:
      - build_artifacts
      - save_workspace
  build_playground:
    description: 'Building playground'
    steps:
      - run: yarn playground:build
  build_starter:
    description: 'Building starter'
    steps:
      - run: yarn template-starter:build
  publish_to_canary:
    steps:
      - run:
          name: Publishing to npm registry
          command: ./scripts/release_canary.sh

jobs:
  lint_and_test:
    executor: node_10
    steps:
      - install_dependencies
      - lint
      - unit_test
  build:
    executor: node_10
    steps:
      - install_dependencies
      - build_packages
  vrt_test:
    executor: node_10
    steps:
      - install_dependencies
      - restore_workspace
      - vrt_test
  e2e_test:
    executor: cypress
    parameters:
      record:
        type: boolean
        default: false
      parallel:
        type: boolean
        default: false
      parallelism:
        type: integer
        default: 1
      start:
        type: string
        default: ''
      build:
        type: string
        default: ''
      wait-on:
        type: string
        default: ''
      spec:
        type: string
        default: ''
      group:
        type: string
        default: ''
      store_artifacts:
        type: boolean
        default: false
    steps:
      - install_dependencies
      - restore_workspace
      - when:
          condition: <<parameters.build>>
          steps:
            - run:
                name: Building
                command: <<parameters.build>>
      - when:
          condition: <<parameters.start>>
          steps:
            - run:
                name: Starting
                command: <<parameters.start>>
                background: true
      - when:
          condition: <<parameters.wait-on>>
          steps:
            - run:
                name: Waiting on <<parameters.wait-on>>
                command: npx wait-on <<parameters.wait-on>>
      - run:
          name: Run Cypress tests
          command: |
            npx cypress run \
              <<# parameters.spec>> --spec '<<parameters.spec>>' <</ parameters.spec>> \
              <<# parameters.record >> --record \
                <<# parameters.group>> --group '<<parameters.group>>' <</ parameters.group>> \
                <<# parameters.parallel>> --parallel <</ parameters.parallel>> \
              <</ parameters.record>>
      - when:
          condition: << parameters.store_artifacts >>
          steps:
            - store_artifacts:
                path: cypress/videos
            - store_artifacts:
                path: cypress/screenshots
  publish:
    executor: node_10
    steps:
      - checkout
      - install_dependencies
      - restore_workspace
      - publish_to_canary

workflows:
  version: 2
  build_and_test:
    jobs:
      - lint_and_test
      - build:
          requires:
            - lint_and_test
      - vrt_test:
          requires:
            - build
      - e2e_test:
          name: e2e_playground
          requires:
            - build
          spec: 'cypress/integration/playground/**/*.js'
          build: yarn playground:build
          start: yarn playground:start:prod:local
          wait-on: 'http://localhost:3001'
          store_artifacts: true
      - e2e_test:
          name: e2e_starter
          requires:
            - build
          spec: 'cypress/integration/template-starter/**/*.js'
          build: yarn template-starter:build
          start: yarn template-starter:start:prod:local
          wait-on: 'http://localhost:3001'
          store_artifacts: true
      - publish:
          requires:
            - e2e_playground
            - e2e_starter
          filters:
            branches:
              only:
                - master
