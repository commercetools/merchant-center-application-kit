diff --git a/dist/index.d.ts b/dist/index.d.ts
index 6a491b2b03b5bf351e1ff07e2ac8659bd47c54c5..40d52d026125492824f8fa35f141a00fa9f3eec3 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -1,34 +1,37 @@
-import { Plugin } from 'vite';
-import { ZlibOptions } from 'zlib';
-import { Plugin as Plugin$1 } from 'rollup';
+import { Plugin } from "vite";
+import { ZlibOptions } from "zlib";
+import { Plugin as Plugin$1 } from "rollup";
 
-type AnalyzerMode = 'static' | 'json' | 'server';
-type DefaultSizes = 'stat' | 'parsed' | 'gzip';
+type AnalyzerMode = "static" | "json" | "server";
+type DefaultSizes = "stat" | "parsed" | "gzip";
 interface BasicAnalyzerPluginOptions {
-    summary?: boolean;
-    analyzerMode?: AnalyzerMode;
-    reportTitle?: string;
-    defaultSizes?: DefaultSizes;
-    gzipOptions?: ZlibOptions;
+  summary?: boolean;
+  analyzerMode?: AnalyzerMode;
+  reportTitle?: string;
+  defaultSizes?: DefaultSizes;
+  gzipOptions?: ZlibOptions;
 }
 interface AnalyzerPluginOptionsWithServer extends BasicAnalyzerPluginOptions {
-    analyzerMode?: 'server';
-    analyzerPort?: number | 'auto';
-    openAnalyzer?: boolean;
+  analyzerMode?: "server";
+  analyzerPort?: number | "auto";
+  openAnalyzer?: boolean;
 }
 interface AnalyzerPluginOptionsWithJson extends BasicAnalyzerPluginOptions {
-    analyzerMode?: 'json';
-    fileName?: string;
+  analyzerMode?: "json";
+  fileName?: string;
 }
 interface AnalyzerPluginOptionsWithStatic extends BasicAnalyzerPluginOptions {
-    analyzerMode?: 'static';
-    analyzerPort?: number | 'auto';
-    openAnalyzer?: boolean;
-    fileName?: string;
+  analyzerMode?: "static";
+  analyzerPort?: number | "auto";
+  openAnalyzer?: boolean;
+  fileName?: string;
 }
-type AnalyzerPluginOptions = AnalyzerPluginOptionsWithServer | AnalyzerPluginOptionsWithStatic | AnalyzerPluginOptionsWithJson;
+type AnalyzerPluginOptions =
+  | AnalyzerPluginOptionsWithServer
+  | AnalyzerPluginOptionsWithStatic
+  | AnalyzerPluginOptionsWithJson;
 
-declare function adapter(userPlugin: Plugin): Plugin$1<any>;
+declare function adapter(userPlugin: Plugin): Plugin$1;
 
 declare function analyzer(opts?: AnalyzerPluginOptions): Plugin;
 
