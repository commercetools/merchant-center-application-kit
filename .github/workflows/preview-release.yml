name: Preview Release

on:
  issue_comment:
    types:
      - created

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  log_issue:
    runs-on: ubuntu-latest

    steps:
      - name: Log Issue Details
        run: |
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Issue Body: ${{ github.event.issue.body }}"
          echo "Issue URL: ${{ github.event.issue.html_url }}"
          echo "Issue Number: ${{ github.event.issue.number }}"
          echo "Issue Author: ${{ github.event.issue.user.login }}"
          echo "Repository: ${{ github.repository }}"
          
  release:
    if: contains(github.event.comment.body, '[preview_deployment]')
    runs-on: ubuntu-latest

    timeout-minutes: 15

    steps:
      # Log GitHub context for debugging
      - name: Log GitHub Context
        run: |
          echo "GitHub context: ${{ toJson(github) }}"
          echo "Comment body: ${{ github.event.comment.body }}"
          echo "PR head ref: ${{ github.event.issue.pull_request.head.ref }}"

      # Get GitHub token via the CT Changesets App
      - name: Generate GitHub token (via CT Changesets App)
        id: generate_github_token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: ${{ secrets.CT_CHANGESETS_APP_ID }}
          private_key: ${{ secrets.CT_CHANGESETS_APP_PEM }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ steps.generate_github_token.outputs.token }}   
          
      - name: Fetch PR branch
        run: |
          git fetch origin ${{ github.event.issue.pull_request.head.ref }}
          git checkout ${{ github.event.issue.pull_request.head.ref }}

      - name: Installing dependencies and building packages
        uses: ./.github/actions/ci

      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            provenance=true
            email=npmjs@commercetools.com
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure prerelease mode
        run: |
          git checkout ${{ github.head_ref }}
          pnpm changeset pre enter preview
        env:
          GITHUB_TOKEN: ${{ steps.generate_github_token.outputs.token }}
      - name: Verson package in prerelease mode
        run: |
          pnpm changeset version
        env:
          GITHUB_TOKEN: ${{ steps.generate_github_token.outputs.token }}
      - name: Publish prerelease packages to npm
        run: |
          pnpm changeset publish --tag preview
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Exit prerelease mode
        run: |
          pnpm changeset pre exit
        env:
          GITHUB_TOKEN: ${{ steps.generate_github_token.outputs.token }}

