name: Main workflow

# The event triggers are configured as following:
# - on branch master, trigger the workflow on every push
# - on any pull request, trigger the workflow
# This is to avoid running the workflow twice on pull requests.
on:
  push:
    branches:
    - master
  pull_request:

jobs:
  build_lint_and_test:
    # https://github.com/cypress-io/github-action/blob/263091cab1962eea06e293a19146e9d0241a1c32/README.md#important
    runs-on: ubuntu-16.04

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup Node (uses version in .nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Building packages
        run: yarn build

      - name: Running static type checking
        run: yarn typecheck

      - name: Running linters and tests
        run: yarn run jest --projects jest.{eslint,stylelint,test,text}.config.js --reporters jest-silent-reporter

      - name: Building Visual Regression Tests application for UI components
        run: yarn visual-testing-app:build

      - name: Running Visual Regression Tests for UI components
        uses: ianwalter/puppeteer@v2.0.0
        with:
          args: 'yarn vrt:components'
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_UI_COMPONENTS }}

      - name: Running End-to-End tests for Playground application
        uses: cypress-io/github-action@v1
        with:
          headless: true
          build: 'yarn playground:build'
          start: 'yarn playground:start:prod:local'
          wait-on: 'http://localhost:3001'
          spec: 'cypress/integration/playground/**/*.js'
          env: 'CI=true'
          command-prefix: 'percy exec --'
        env:
          NODE_ENV: test
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_E2E_PLAYGROUND }}
          CYPRESS_LOGIN_USER: ${{ secrets.CYPRESS_LOGIN_USER }}
          CYPRESS_LOGIN_PASSWORD: ${{ secrets.CYPRESS_LOGIN_PASSWORD }}
          CYPRESS_PROJECT_KEY: ${{ secrets. CYPRESS_PROJECT_KEY }}

      - name: Running End-to-End tests for Starter template application
        uses: cypress-io/github-action@v1
        with:
          headless: true
          build: 'yarn template-starter:build'
          start: 'yarn template-starter:start:prod:local'
          wait-on: 'http://localhost:3001'
          spec: 'cypress/integration/template-starter/**/*.js'
          env: 'CI=true'
          command-prefix: 'percy exec --'
        env:
          NODE_ENV: test
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_E2E_STARTER }}
          CYPRESS_LOGIN_USER: ${{ secrets.CYPRESS_LOGIN_USER }}
          CYPRESS_LOGIN_PASSWORD: ${{ secrets.CYPRESS_LOGIN_PASSWORD }}
          CYPRESS_PROJECT_KEY: ${{ secrets. CYPRESS_PROJECT_KEY }}

      - name: Uploading Cypress artifacts
        # Test run video was always captured because the action was using "always()" condition
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos

      - name: Publishing to npm registry
        if: github.ref == 'refs/heads/master'
        run: ./scripts/release_canary.sh
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
