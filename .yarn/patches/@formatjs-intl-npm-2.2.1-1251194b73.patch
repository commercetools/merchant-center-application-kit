diff --git a/lib/src/types.d.ts b/lib/src/types.d.ts
index ae390c3a1eb2698a6303727e80a2ee6a74fb03ec..47f055c6c90aeb1b1f1bd839a08bb90611f01fd8 100755
--- a/lib/src/types.d.ts
+++ b/lib/src/types.d.ts
@@ -14,12 +14,14 @@ declare global {
         }
     }
 }
-declare type MessageIds = FormatjsIntl.Message extends {
-    ids: string;
-} ? FormatjsIntl.Message['ids'] : string;
-declare type Locale = FormatjsIntl.IntlConfig extends {
-    locale: string;
-} ? FormatjsIntl.IntlConfig['locale'] : string;
+declare type MessageIds = FormatjsIntl.Message extends { ids: infer T }
+? T extends string
+    ? T : string
+: string;
+declare type Locale = FormatjsIntl.IntlConfig extends { locale: infer T }
+? T extends string
+    ? T : string
+: string;
 export declare type OnErrorFn = (err: MissingTranslationError | MessageFormatError | MissingDataError | InvalidConfigError | UnsupportedFormatterError | FormatError) => void;
 export declare type OnWarnFn = (warning: string) => void;
 /**
diff --git a/src/types.d.ts b/src/types.d.ts
index ae390c3a1eb2698a6303727e80a2ee6a74fb03ec..47f055c6c90aeb1b1f1bd839a08bb90611f01fd8 100755
--- a/src/types.d.ts
+++ b/src/types.d.ts
@@ -14,12 +14,14 @@ declare global {
         }
     }
 }
-declare type MessageIds = FormatjsIntl.Message extends {
-    ids: string;
-} ? FormatjsIntl.Message['ids'] : string;
-declare type Locale = FormatjsIntl.IntlConfig extends {
-    locale: string;
-} ? FormatjsIntl.IntlConfig['locale'] : string;
+declare type MessageIds = FormatjsIntl.Message extends { ids: infer T }
+? T extends string
+    ? T : string
+: string;
+declare type Locale = FormatjsIntl.IntlConfig extends { locale: infer T }
+? T extends string
+    ? T : string
+: string;
 export declare type OnErrorFn = (err: MissingTranslationError | MessageFormatError | MissingDataError | InvalidConfigError | UnsupportedFormatterError | FormatError) => void;
 export declare type OnWarnFn = (warning: string) => void;
 /**
